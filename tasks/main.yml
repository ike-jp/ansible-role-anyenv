---
# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"


- include: setup-RedHat.yml
  when: ansible_os_family == "RedHat"


- include: setup-Debian.yml
  when: ansible_os_family == "Debian"


- name: Install anyenv
  git:
    repo: "{{ anyenv.repository_url }}"
    dest: "{{ anyenv.installaton_dir }}"


- name: Install anyenv-plugins
  git:
    repo: "{{ item.repository_url }}"
    dest: "{{ item.installation_dir }}"
  with_items:
    - "{{ anyenv.plugins }}"


- name: Add path to profile
  blockinfile:
    dest: "{{ anyenv.profile_to_add_path }}"
    block: "{{ anyenv.export_text }}"
    insertafter: EOF
  when: anyenv.export


# When added -s option, anyenv will skip the installation.
- name: Install envs
  shell: |
    /bin/bash -lc "source {{ anyenv.profile_to_add_path }}"
    /bin/bash -lc "anyenv install -s {{ item.name }}"
  register: result
  changed_when: result.stdout != "" and result.stderr != ""
  with_items: "{{ anyenv.envs }}"


# Usually **env has -s option in installation command,
# but luaenv not having it. So I used failed_when.
- name: Install language
  shell: |
    /bin/bash -lc "source {{ anyenv.profile_to_add_path }}"
    /bin/bash -lc "{{ item.0.name }} install {{ item.1 }}"
  register: result
  changed_when: "'already exists' not in result.stderr"
  failed_when: "result.stderr != '' and ('already exists' not in result.stderr and 'Installed' not in result.stderr)"
  with_subelements:
    - "{{ anyenv.envs }}"
    - "installation_versions"


